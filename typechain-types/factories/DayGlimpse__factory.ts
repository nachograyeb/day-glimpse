/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { DayGlimpse, DayGlimpseInterface } from "../DayGlimpse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_profile",
        type: "address",
      },
    ],
    name: "getDayGlimpse",
    outputs: [
      {
        internalType: "bytes",
        name: "storageHash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPrivate",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_storageHash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPrivate",
        type: "bool",
      },
    ],
    name: "setDayGlimpse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506108c58061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633b961d891461003b57806361cfd14614610057575b600080fd5b61005560048036038101906100509190610389565b61008a565b005b610071600480360381019061006c919061045b565b61019b565b6040516100819493929190610536565b60405180910390f35b604051806080016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018381526020018215158152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161014791906107bd565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555090505050505050565b60606000806000806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000181600101548260020160009054906101000a900460ff168360020160019054906101000a900460ff1683805461021c906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610248906105e0565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b505050505093509450945094509450509193509193565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102db576102da6102b6565b5b8235905067ffffffffffffffff8111156102f8576102f76102bb565b5b602083019150836001820283011115610314576103136102c0565b5b9250929050565b6000819050919050565b61032e8161031b565b811461033957600080fd5b50565b60008135905061034b81610325565b92915050565b60008115159050919050565b61036681610351565b811461037157600080fd5b50565b6000813590506103838161035d565b92915050565b600080600080606085870312156103a3576103a26102ac565b5b600085013567ffffffffffffffff8111156103c1576103c06102b1565b5b6103cd878288016102c5565b945094505060206103e08782880161033c565b92505060406103f187828801610374565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610428826103fd565b9050919050565b6104388161041d565b811461044357600080fd5b50565b6000813590506104558161042f565b92915050565b600060208284031215610471576104706102ac565b5b600061047f84828501610446565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104c25780820151818401526020810190506104a7565b60008484015250505050565b6000601f19601f8301169050919050565b60006104ea82610488565b6104f48185610493565b93506105048185602086016104a4565b61050d816104ce565b840191505092915050565b6105218161031b565b82525050565b61053081610351565b82525050565b6000608082019050818103600083015261055081876104df565b905061055f6020830186610518565b61056c6040830185610527565b6105796060830184610527565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105f857607f821691505b60208210810361060b5761060a6105b1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610636565b61067d8683610636565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106ba6106b56106b08461031b565b610695565b61031b565b9050919050565b6000819050919050565b6106d48361069f565b6106e86106e0826106c1565b848454610643565b825550505050565b600090565b6106fd6106f0565b6107088184846106cb565b505050565b5b8181101561072c576107216000826106f5565b60018101905061070e565b5050565b601f8211156107715761074281610611565b61074b84610626565b8101602085101561075a578190505b61076e61076685610626565b83018261070d565b50505b505050565b600082821c905092915050565b600061079460001984600802610776565b1980831691505092915050565b60006107ad8383610783565b9150826002028217905092915050565b6107c682610488565b67ffffffffffffffff8111156107df576107de610582565b5b6107e982546105e0565b6107f4828285610730565b600060209050601f8311600181146108275760008415610815578287015190505b61081f85826107a1565b865550610887565b601f19841661083586610611565b60005b8281101561085d57848901518255600182019150602085019450602081019050610838565b8683101561087a5784890151610876601f891682610783565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209eb39aa9f85468393c3faf2da6fb0ec6f2ce14e62781c733b614ba3cce9cb0f264736f6c634300081c0033";

type DayGlimpseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DayGlimpseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DayGlimpse__factory extends ContractFactory {
  constructor(...args: DayGlimpseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DayGlimpse & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DayGlimpse__factory {
    return super.connect(runner) as DayGlimpse__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DayGlimpseInterface {
    return new Interface(_abi) as DayGlimpseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DayGlimpse {
    return new Contract(address, _abi, runner) as unknown as DayGlimpse;
  }
}
